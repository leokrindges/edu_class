# Dockerfile.dev
FROM node:22-alpine
WORKDIR /usr/src/app

# Dependências para pacotes nativos (bcrypt) e Prisma
RUN apk add --no-cache python3 make g++ bash libc6-compat openssl

# Aproveita cache do Docker: instala deps só quando package.json muda
COPY package*.json ./
RUN npm ci

# Copia configs de build e código
COPY tsconfig*.json nest-cli.json ./
COPY prisma ./prisma
COPY src ./src

# Copia o resto do projeto
COPY . .

# Gera o Prisma Client (se já houver schema)/ignora erro se ainda não tem DB
RUN npx prisma generate || true
# Em dev, evite instalar Nest CLI global.
# Use os scripts do package.json (nest já vem em devDependencies)

# Variáveis que ajudam o watch no Windows/WSL
ENV CHOKIDAR_USEPOLLING=true \
    WATCHPACK_POLLING=true \
    CHOKIDAR_INTERVAL=300
EXPOSE 3000


# Cria um usuário não-root para desenvolvimento
# RUN addgroup -g 1001 -S nodejs
# RUN adduser -S nestjs -u 1001
# USER nestjs

CMD ["npm", "run", "start:dev"]
